/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.jpd.shop.admin.source;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.ImageIcon;

import com.jpd.shop.common_files.Client;
import com.jpd.shop.common_files.Colors;
import com.jpd.shop.common_files.NavButton;

/**
 *
 * @author jpd
 */
public class CategoryPanel extends javax.swing.JPanel {

    private final ProductsPanel PRODUCTS_PANEL_REF;

    public CategoryPanel() {
        this(null);
    }

    public CategoryPanel(ProductsPanel productsPanelRef) {
        PRODUCTS_PANEL_REF = productsPanelRef;

        customInit();
    }

    private void customInit() {

        this.setLayout(new GridBagLayout());
        GridBagConstraints constraints = new GridBagConstraints();

        constraints.insets = new Insets(5, 0, 5, 0);
        constraints.gridwidth = GridBagConstraints.REMAINDER;
        constraints.anchor = GridBagConstraints.CENTER;

        ImageIcon icon;
        ImageIcon blueIcon;
        NavButton button;

        // initialize burger button
        {
            icon = new ImageIcon(getClass().getResource(
                    "/com/jpd/shop/common_files/icons/hamburger_button.png"));
            blueIcon = new ImageIcon(getClass().getResource(
                    "/com/jpd/shop/common_files/icons/blue_hamburger_button.png"));
            button = new NavButton(icon, blueIcon, false);

            NavButton.changeLastClickedButton(button);
            button.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseReleased(MouseEvent e) {
                    // PRODUCTS_PANEL_REF.getDisplayProductsPanel()
                    // .loadProducts(Client.GET_BURGER_PRODUCTS);
                }
            });
            button.setVisible(true);
            this.add(button, constraints);
        }

        // initialize fries button
        {
            icon = new ImageIcon(getClass().getResource(
                    "/com/jpd/shop/common_files/icons/fries_button.png"));
            blueIcon = new ImageIcon(getClass().getResource(
                    "/com/jpd/shop/common_files/icons/blue_fries_button.png"));
            button = new NavButton(icon, blueIcon, false);

            button.setIcon(icon);
            button.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseReleased(MouseEvent e) {
                    // PRODUCTS_PANEL_REF.getDisplayProductsPanel()
                    // .loadProducts(Client.GET_FRIES_PRODUCTS);
                }
            });
            button.setVisible(true);
            this.add(button, constraints);
        }

        // initialize drinks button
        {
            icon = new ImageIcon(getClass().getResource(
                    "/com/jpd/shop/common_files/icons/drinks_button.png"));
            blueIcon = new ImageIcon(getClass().getResource(
                    "/com/jpd/shop/common_files/icons/blue_drinks_button.png"));
            button = new NavButton(icon, blueIcon, false);

            button.setIcon(icon);
            button.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseReleased(MouseEvent e) {
                    // PRODUCTS_PANEL_REF.getDisplayProductsPanel()
                    // .loadProducts(Client.GET_DRINKS_PRODUCTS);
                }
            });
            button.setVisible(true);
            this.add(button, constraints);
        }

        this.setPreferredSize(new Dimension(50, 529));
        this.setBackground(Colors.WHITE);
        // this.setBorder(new LineBorder(Colors.BLACK, 1));
        this.setOpaque(true);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(50, 530));
        setMinimumSize(new java.awt.Dimension(50, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 50, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 530, Short.MAX_VALUE));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
